// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: spotify/extendedmetadata/audiofiles/audio_files_extension.proto

package audiofiles

import (
	metadata "github.com/devgianlu/go-librespot/proto/spotify/metadata"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NormalizationParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LoudnessDb    float32                `protobuf:"fixed32,1,opt,name=loudness_db,json=loudnessDb,proto3" json:"loudness_db,omitempty"`
	TruePeakDb    float32                `protobuf:"fixed32,2,opt,name=true_peak_db,json=truePeakDb,proto3" json:"true_peak_db,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NormalizationParams) Reset() {
	*x = NormalizationParams{}
	mi := &file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NormalizationParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalizationParams) ProtoMessage() {}

func (x *NormalizationParams) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalizationParams.ProtoReflect.Descriptor instead.
func (*NormalizationParams) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDescGZIP(), []int{0}
}

func (x *NormalizationParams) GetLoudnessDb() float32 {
	if x != nil {
		return x.LoudnessDb
	}
	return 0
}

func (x *NormalizationParams) GetTruePeakDb() float32 {
	if x != nil {
		return x.TruePeakDb
	}
	return 0
}

type ExtendedAudioFile struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	File           *metadata.AudioFile    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	AverageBitrate int32                  `protobuf:"varint,4,opt,name=average_bitrate,json=averageBitrate,proto3" json:"average_bitrate,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExtendedAudioFile) Reset() {
	*x = ExtendedAudioFile{}
	mi := &file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendedAudioFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedAudioFile) ProtoMessage() {}

func (x *ExtendedAudioFile) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedAudioFile.ProtoReflect.Descriptor instead.
func (*ExtendedAudioFile) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDescGZIP(), []int{1}
}

func (x *ExtendedAudioFile) GetFile() *metadata.AudioFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ExtendedAudioFile) GetAverageBitrate() int32 {
	if x != nil {
		return x.AverageBitrate
	}
	return 0
}

type AudioFilesExtensionResponse struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	Files                           []*ExtendedAudioFile   `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	DefaultFileNormalizationParams  *NormalizationParams   `protobuf:"bytes,2,opt,name=default_file_normalization_params,json=defaultFileNormalizationParams,proto3" json:"default_file_normalization_params,omitempty"`
	DefaultAlbumNormalizationParams *NormalizationParams   `protobuf:"bytes,3,opt,name=default_album_normalization_params,json=defaultAlbumNormalizationParams,proto3" json:"default_album_normalization_params,omitempty"`
	AudioId                         []byte                 `protobuf:"bytes,4,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *AudioFilesExtensionResponse) Reset() {
	*x = AudioFilesExtensionResponse{}
	mi := &file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioFilesExtensionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioFilesExtensionResponse) ProtoMessage() {}

func (x *AudioFilesExtensionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioFilesExtensionResponse.ProtoReflect.Descriptor instead.
func (*AudioFilesExtensionResponse) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDescGZIP(), []int{2}
}

func (x *AudioFilesExtensionResponse) GetFiles() []*ExtendedAudioFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *AudioFilesExtensionResponse) GetDefaultFileNormalizationParams() *NormalizationParams {
	if x != nil {
		return x.DefaultFileNormalizationParams
	}
	return nil
}

func (x *AudioFilesExtensionResponse) GetDefaultAlbumNormalizationParams() *NormalizationParams {
	if x != nil {
		return x.DefaultAlbumNormalizationParams
	}
	return nil
}

func (x *AudioFilesExtensionResponse) GetAudioId() []byte {
	if x != nil {
		return x.AudioId
	}
	return nil
}

var File_spotify_extendedmetadata_audiofiles_audio_files_extension_proto protoreflect.FileDescriptor

const file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDesc = "" +
	"\n" +
	"?spotify/extendedmetadata/audiofiles/audio_files_extension.proto\x12#spotify.extendedmetadata.audiofiles\x1a\x1fspotify/metadata/metadata.proto\"X\n" +
	"\x13NormalizationParams\x12\x1f\n" +
	"\vloudness_db\x18\x01 \x01(\x02R\n" +
	"loudnessDb\x12 \n" +
	"\ftrue_peak_db\x18\x02 \x01(\x02R\n" +
	"truePeakDb\"y\n" +
	"\x11ExtendedAudioFile\x12/\n" +
	"\x04file\x18\x01 \x01(\v2\x1b.spotify.metadata.AudioFileR\x04file\x12'\n" +
	"\x0faverage_bitrate\x18\x04 \x01(\x05R\x0eaverageBitrateJ\x04\b\x02\x10\x03J\x04\b\x03\x10\x04\"\x94\x03\n" +
	"\x1bAudioFilesExtensionResponse\x12L\n" +
	"\x05files\x18\x01 \x03(\v26.spotify.extendedmetadata.audiofiles.ExtendedAudioFileR\x05files\x12\x83\x01\n" +
	"!default_file_normalization_params\x18\x02 \x01(\v28.spotify.extendedmetadata.audiofiles.NormalizationParamsR\x1edefaultFileNormalizationParams\x12\x85\x01\n" +
	"\"default_album_normalization_params\x18\x03 \x01(\v28.spotify.extendedmetadata.audiofiles.NormalizationParamsR\x1fdefaultAlbumNormalizationParams\x12\x19\n" +
	"\baudio_id\x18\x04 \x01(\fR\aaudioIdB\xbe\x02\n" +
	"'com.spotify.extendedmetadata.audiofilesB\x18AudioFilesExtensionProtoP\x01ZKgithub.com/devgianlu/go-librespot/proto/spotify/extendedmetadata/audiofiles\xa2\x02\x03SEA\xaa\x02#Spotify.Extendedmetadata.Audiofiles\xca\x02#Spotify\\Extendedmetadata\\Audiofiles\xe2\x02/Spotify\\Extendedmetadata\\Audiofiles\\GPBMetadata\xea\x02%Spotify::Extendedmetadata::Audiofilesb\x06proto3"

var (
	file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDescOnce sync.Once
	file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDescData []byte
)

func file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDescGZIP() []byte {
	file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDescOnce.Do(func() {
		file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDesc), len(file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDesc)))
	})
	return file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDescData
}

var file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_goTypes = []any{
	(*NormalizationParams)(nil),         // 0: spotify.extendedmetadata.audiofiles.NormalizationParams
	(*ExtendedAudioFile)(nil),           // 1: spotify.extendedmetadata.audiofiles.ExtendedAudioFile
	(*AudioFilesExtensionResponse)(nil), // 2: spotify.extendedmetadata.audiofiles.AudioFilesExtensionResponse
	(*metadata.AudioFile)(nil),          // 3: spotify.metadata.AudioFile
}
var file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_depIdxs = []int32{
	3, // 0: spotify.extendedmetadata.audiofiles.ExtendedAudioFile.file:type_name -> spotify.metadata.AudioFile
	1, // 1: spotify.extendedmetadata.audiofiles.AudioFilesExtensionResponse.files:type_name -> spotify.extendedmetadata.audiofiles.ExtendedAudioFile
	0, // 2: spotify.extendedmetadata.audiofiles.AudioFilesExtensionResponse.default_file_normalization_params:type_name -> spotify.extendedmetadata.audiofiles.NormalizationParams
	0, // 3: spotify.extendedmetadata.audiofiles.AudioFilesExtensionResponse.default_album_normalization_params:type_name -> spotify.extendedmetadata.audiofiles.NormalizationParams
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_init() }
func file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_init() {
	if File_spotify_extendedmetadata_audiofiles_audio_files_extension_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDesc), len(file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_goTypes,
		DependencyIndexes: file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_depIdxs,
		MessageInfos:      file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_msgTypes,
	}.Build()
	File_spotify_extendedmetadata_audiofiles_audio_files_extension_proto = out.File
	file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_goTypes = nil
	file_spotify_extendedmetadata_audiofiles_audio_files_extension_proto_depIdxs = nil
}
