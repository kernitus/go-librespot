// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: spotify/connectstate/devices/connect_devices.proto

package devices

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceType int32

const (
	DeviceType_UNKNOWN         DeviceType = 0
	DeviceType_COMPUTER        DeviceType = 1
	DeviceType_TABLET          DeviceType = 2
	DeviceType_SMARTPHONE      DeviceType = 3
	DeviceType_SPEAKER         DeviceType = 4
	DeviceType_TV              DeviceType = 5
	DeviceType_AVR             DeviceType = 6
	DeviceType_STB             DeviceType = 7
	DeviceType_AUDIO_DONGLE    DeviceType = 8
	DeviceType_GAME_CONSOLE    DeviceType = 9
	DeviceType_CAST_VIDEO      DeviceType = 10
	DeviceType_CAST_AUDIO      DeviceType = 11
	DeviceType_AUTOMOBILE      DeviceType = 12
	DeviceType_SMARTWATCH      DeviceType = 13
	DeviceType_CHROMEBOOK      DeviceType = 14
	DeviceType_UNKNOWN_SPOTIFY DeviceType = 100
	DeviceType_CAR_THING       DeviceType = 101
	DeviceType_OBSERVER        DeviceType = 102
	DeviceType_HOME_THING      DeviceType = 103
)

// Enum value maps for DeviceType.
var (
	DeviceType_name = map[int32]string{
		0:   "UNKNOWN",
		1:   "COMPUTER",
		2:   "TABLET",
		3:   "SMARTPHONE",
		4:   "SPEAKER",
		5:   "TV",
		6:   "AVR",
		7:   "STB",
		8:   "AUDIO_DONGLE",
		9:   "GAME_CONSOLE",
		10:  "CAST_VIDEO",
		11:  "CAST_AUDIO",
		12:  "AUTOMOBILE",
		13:  "SMARTWATCH",
		14:  "CHROMEBOOK",
		100: "UNKNOWN_SPOTIFY",
		101: "CAR_THING",
		102: "OBSERVER",
		103: "HOME_THING",
	}
	DeviceType_value = map[string]int32{
		"UNKNOWN":         0,
		"COMPUTER":        1,
		"TABLET":          2,
		"SMARTPHONE":      3,
		"SPEAKER":         4,
		"TV":              5,
		"AVR":             6,
		"STB":             7,
		"AUDIO_DONGLE":    8,
		"GAME_CONSOLE":    9,
		"CAST_VIDEO":      10,
		"CAST_AUDIO":      11,
		"AUTOMOBILE":      12,
		"SMARTWATCH":      13,
		"CHROMEBOOK":      14,
		"UNKNOWN_SPOTIFY": 100,
		"CAR_THING":       101,
		"OBSERVER":        102,
		"HOME_THING":      103,
	}
)

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}

func (x DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_spotify_connectstate_devices_connect_devices_proto_enumTypes[0].Descriptor()
}

func (DeviceType) Type() protoreflect.EnumType {
	return &file_spotify_connectstate_devices_connect_devices_proto_enumTypes[0]
}

func (x DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceType.Descriptor instead.
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP(), []int{0}
}

type GroupData_GroupType int32

const (
	GroupData_UNKNOWN_GROUP_TYPE GroupData_GroupType = 0
	GroupData_STATIC             GroupData_GroupType = 1
	GroupData_DYNAMIC            GroupData_GroupType = 2
)

// Enum value maps for GroupData_GroupType.
var (
	GroupData_GroupType_name = map[int32]string{
		0: "UNKNOWN_GROUP_TYPE",
		1: "STATIC",
		2: "DYNAMIC",
	}
	GroupData_GroupType_value = map[string]int32{
		"UNKNOWN_GROUP_TYPE": 0,
		"STATIC":             1,
		"DYNAMIC":            2,
	}
)

func (x GroupData_GroupType) Enum() *GroupData_GroupType {
	p := new(GroupData_GroupType)
	*p = x
	return p
}

func (x GroupData_GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupData_GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_spotify_connectstate_devices_connect_devices_proto_enumTypes[1].Descriptor()
}

func (GroupData_GroupType) Type() protoreflect.EnumType {
	return &file_spotify_connectstate_devices_connect_devices_proto_enumTypes[1]
}

func (x GroupData_GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupData_GroupType.Descriptor instead.
func (GroupData_GroupType) EnumDescriptor() ([]byte, []int) {
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP(), []int{1, 0}
}

type GroupDevice_GroupingStatus int32

const (
	GroupDevice_UNKNOWN_GROUPING_STATUS GroupDevice_GroupingStatus = 0
	GroupDevice_GROUPED                 GroupDevice_GroupingStatus = 1
	GroupDevice_GROUPABLE               GroupDevice_GroupingStatus = 2
)

// Enum value maps for GroupDevice_GroupingStatus.
var (
	GroupDevice_GroupingStatus_name = map[int32]string{
		0: "UNKNOWN_GROUPING_STATUS",
		1: "GROUPED",
		2: "GROUPABLE",
	}
	GroupDevice_GroupingStatus_value = map[string]int32{
		"UNKNOWN_GROUPING_STATUS": 0,
		"GROUPED":                 1,
		"GROUPABLE":               2,
	}
)

func (x GroupDevice_GroupingStatus) Enum() *GroupDevice_GroupingStatus {
	p := new(GroupDevice_GroupingStatus)
	*p = x
	return p
}

func (x GroupDevice_GroupingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupDevice_GroupingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spotify_connectstate_devices_connect_devices_proto_enumTypes[2].Descriptor()
}

func (GroupDevice_GroupingStatus) Type() protoreflect.EnumType {
	return &file_spotify_connectstate_devices_connect_devices_proto_enumTypes[2]
}

func (x GroupDevice_GroupingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupDevice_GroupingStatus.Descriptor instead.
func (GroupDevice_GroupingStatus) EnumDescriptor() ([]byte, []int) {
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP(), []int{3, 0}
}

type DeviceAlias struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	IsGroup       bool                   `protobuf:"varint,3,opt,name=is_group,json=isGroup,proto3" json:"is_group,omitempty"`
	GroupData     *GroupData             `protobuf:"bytes,4,opt,name=group_data,json=groupData,proto3,oneof" json:"group_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceAlias) Reset() {
	*x = DeviceAlias{}
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceAlias) ProtoMessage() {}

func (x *DeviceAlias) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceAlias.ProtoReflect.Descriptor instead.
func (*DeviceAlias) Descriptor() ([]byte, []int) {
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceAlias) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceAlias) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *DeviceAlias) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

func (x *DeviceAlias) GetGroupData() *GroupData {
	if x != nil {
		return x.GroupData
	}
	return nil
}

type GroupData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Devices       []*GroupDevice         `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	Capabilities  *GroupCapabilities     `protobuf:"bytes,2,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Type          GroupData_GroupType    `protobuf:"varint,3,opt,name=type,proto3,enum=spotify.connectstate.devices.GroupData_GroupType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupData) Reset() {
	*x = GroupData{}
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupData) ProtoMessage() {}

func (x *GroupData) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupData.ProtoReflect.Descriptor instead.
func (*GroupData) Descriptor() ([]byte, []int) {
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP(), []int{1}
}

func (x *GroupData) GetDevices() []*GroupDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *GroupData) GetCapabilities() *GroupCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *GroupData) GetType() GroupData_GroupType {
	if x != nil {
		return x.Type
	}
	return GroupData_UNKNOWN_GROUP_TYPE
}

type GroupCapabilities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupCapabilities) Reset() {
	*x = GroupCapabilities{}
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCapabilities) ProtoMessage() {}

func (x *GroupCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCapabilities.ProtoReflect.Descriptor instead.
func (*GroupCapabilities) Descriptor() ([]byte, []int) {
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP(), []int{2}
}

type GroupDevice struct {
	state                  protoimpl.MessageState     `protogen:"open.v1"`
	GroupDeviceIdentifier  string                     `protobuf:"bytes,1,opt,name=group_device_identifier,json=groupDeviceIdentifier,proto3" json:"group_device_identifier,omitempty"`
	Name                   string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DeviceType             DeviceType                 `protobuf:"varint,3,opt,name=device_type,json=deviceType,proto3,enum=spotify.connectstate.devices.DeviceType" json:"device_type,omitempty"`
	Model                  string                     `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Capabilities           *GroupDeviceCapabilities   `protobuf:"bytes,6,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	GroupingStatus         GroupDevice_GroupingStatus `protobuf:"varint,7,opt,name=grouping_status,json=groupingStatus,proto3,enum=spotify.connectstate.devices.GroupDevice_GroupingStatus" json:"grouping_status,omitempty"`
	SpotifyConnectDeviceId *string                    `protobuf:"bytes,4,opt,name=spotify_connect_device_id,json=spotifyConnectDeviceId,proto3,oneof" json:"spotify_connect_device_id,omitempty"`
	Volume                 *GroupDeviceVolume         `protobuf:"bytes,8,opt,name=volume,proto3,oneof" json:"volume,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GroupDevice) Reset() {
	*x = GroupDevice{}
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDevice) ProtoMessage() {}

func (x *GroupDevice) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDevice.ProtoReflect.Descriptor instead.
func (*GroupDevice) Descriptor() ([]byte, []int) {
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP(), []int{3}
}

func (x *GroupDevice) GetGroupDeviceIdentifier() string {
	if x != nil {
		return x.GroupDeviceIdentifier
	}
	return ""
}

func (x *GroupDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupDevice) GetDeviceType() DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return DeviceType_UNKNOWN
}

func (x *GroupDevice) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GroupDevice) GetCapabilities() *GroupDeviceCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *GroupDevice) GetGroupingStatus() GroupDevice_GroupingStatus {
	if x != nil {
		return x.GroupingStatus
	}
	return GroupDevice_UNKNOWN_GROUPING_STATUS
}

func (x *GroupDevice) GetSpotifyConnectDeviceId() string {
	if x != nil && x.SpotifyConnectDeviceId != nil {
		return *x.SpotifyConnectDeviceId
	}
	return ""
}

func (x *GroupDevice) GetVolume() *GroupDeviceVolume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type GroupDeviceCapabilities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupDeviceCapabilities) Reset() {
	*x = GroupDeviceCapabilities{}
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupDeviceCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeviceCapabilities) ProtoMessage() {}

func (x *GroupDeviceCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeviceCapabilities.ProtoReflect.Descriptor instead.
func (*GroupDeviceCapabilities) Descriptor() ([]byte, []int) {
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP(), []int{4}
}

type GroupDeviceVolume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volume        uint32                 `protobuf:"varint,1,opt,name=volume,proto3" json:"volume,omitempty"`
	VolumeSteps   int32                  `protobuf:"varint,2,opt,name=volume_steps,json=volumeSteps,proto3" json:"volume_steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupDeviceVolume) Reset() {
	*x = GroupDeviceVolume{}
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupDeviceVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeviceVolume) ProtoMessage() {}

func (x *GroupDeviceVolume) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_connectstate_devices_connect_devices_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeviceVolume.ProtoReflect.Descriptor instead.
func (*GroupDeviceVolume) Descriptor() ([]byte, []int) {
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP(), []int{5}
}

func (x *GroupDeviceVolume) GetVolume() uint32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *GroupDeviceVolume) GetVolumeSteps() int32 {
	if x != nil {
		return x.VolumeSteps
	}
	return 0
}

var File_spotify_connectstate_devices_connect_devices_proto protoreflect.FileDescriptor

const file_spotify_connectstate_devices_connect_devices_proto_rawDesc = "" +
	"\n" +
	"2spotify/connectstate/devices/connect_devices.proto\x12\x1cspotify.connectstate.devices\"\xb7\x01\n" +
	"\vDeviceAlias\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x19\n" +
	"\bis_group\x18\x03 \x01(\bR\aisGroup\x12K\n" +
	"\n" +
	"group_data\x18\x04 \x01(\v2'.spotify.connectstate.devices.GroupDataH\x00R\tgroupData\x88\x01\x01B\r\n" +
	"\v_group_data\"\xaa\x02\n" +
	"\tGroupData\x12C\n" +
	"\adevices\x18\x01 \x03(\v2).spotify.connectstate.devices.GroupDeviceR\adevices\x12S\n" +
	"\fcapabilities\x18\x02 \x01(\v2/.spotify.connectstate.devices.GroupCapabilitiesR\fcapabilities\x12E\n" +
	"\x04type\x18\x03 \x01(\x0e21.spotify.connectstate.devices.GroupData.GroupTypeR\x04type\"<\n" +
	"\tGroupType\x12\x16\n" +
	"\x12UNKNOWN_GROUP_TYPE\x10\x00\x12\n" +
	"\n" +
	"\x06STATIC\x10\x01\x12\v\n" +
	"\aDYNAMIC\x10\x02\"\x13\n" +
	"\x11GroupCapabilities\"\xfa\x04\n" +
	"\vGroupDevice\x126\n" +
	"\x17group_device_identifier\x18\x01 \x01(\tR\x15groupDeviceIdentifier\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12I\n" +
	"\vdevice_type\x18\x03 \x01(\x0e2(.spotify.connectstate.devices.DeviceTypeR\n" +
	"deviceType\x12\x14\n" +
	"\x05model\x18\x05 \x01(\tR\x05model\x12Y\n" +
	"\fcapabilities\x18\x06 \x01(\v25.spotify.connectstate.devices.GroupDeviceCapabilitiesR\fcapabilities\x12a\n" +
	"\x0fgrouping_status\x18\a \x01(\x0e28.spotify.connectstate.devices.GroupDevice.GroupingStatusR\x0egroupingStatus\x12>\n" +
	"\x19spotify_connect_device_id\x18\x04 \x01(\tH\x00R\x16spotifyConnectDeviceId\x88\x01\x01\x12L\n" +
	"\x06volume\x18\b \x01(\v2/.spotify.connectstate.devices.GroupDeviceVolumeH\x01R\x06volume\x88\x01\x01\"I\n" +
	"\x0eGroupingStatus\x12\x1b\n" +
	"\x17UNKNOWN_GROUPING_STATUS\x10\x00\x12\v\n" +
	"\aGROUPED\x10\x01\x12\r\n" +
	"\tGROUPABLE\x10\x02B\x1c\n" +
	"\x1a_spotify_connect_device_idB\t\n" +
	"\a_volume\"\x19\n" +
	"\x17GroupDeviceCapabilities\"N\n" +
	"\x11GroupDeviceVolume\x12\x16\n" +
	"\x06volume\x18\x01 \x01(\rR\x06volume\x12!\n" +
	"\fvolume_steps\x18\x02 \x01(\x05R\vvolumeSteps*\xa0\x02\n" +
	"\n" +
	"DeviceType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\f\n" +
	"\bCOMPUTER\x10\x01\x12\n" +
	"\n" +
	"\x06TABLET\x10\x02\x12\x0e\n" +
	"\n" +
	"SMARTPHONE\x10\x03\x12\v\n" +
	"\aSPEAKER\x10\x04\x12\x06\n" +
	"\x02TV\x10\x05\x12\a\n" +
	"\x03AVR\x10\x06\x12\a\n" +
	"\x03STB\x10\a\x12\x10\n" +
	"\fAUDIO_DONGLE\x10\b\x12\x10\n" +
	"\fGAME_CONSOLE\x10\t\x12\x0e\n" +
	"\n" +
	"CAST_VIDEO\x10\n" +
	"\x12\x0e\n" +
	"\n" +
	"CAST_AUDIO\x10\v\x12\x0e\n" +
	"\n" +
	"AUTOMOBILE\x10\f\x12\x0e\n" +
	"\n" +
	"SMARTWATCH\x10\r\x12\x0e\n" +
	"\n" +
	"CHROMEBOOK\x10\x0e\x12\x13\n" +
	"\x0fUNKNOWN_SPOTIFY\x10d\x12\r\n" +
	"\tCAR_THING\x10e\x12\f\n" +
	"\bOBSERVER\x10f\x12\x0e\n" +
	"\n" +
	"HOME_THING\x10gB\x8f\x02\n" +
	" com.spotify.connectstate.devicesB\x13ConnectDevicesProtoP\x01ZDgithub.com/devgianlu/go-librespot/proto/spotify/connectstate/devices\xa2\x02\x03SCD\xaa\x02\x1cSpotify.Connectstate.Devices\xca\x02\x1cSpotify\\Connectstate\\Devices\xe2\x02(Spotify\\Connectstate\\Devices\\GPBMetadata\xea\x02\x1eSpotify::Connectstate::Devicesb\x06proto3"

var (
	file_spotify_connectstate_devices_connect_devices_proto_rawDescOnce sync.Once
	file_spotify_connectstate_devices_connect_devices_proto_rawDescData []byte
)

func file_spotify_connectstate_devices_connect_devices_proto_rawDescGZIP() []byte {
	file_spotify_connectstate_devices_connect_devices_proto_rawDescOnce.Do(func() {
		file_spotify_connectstate_devices_connect_devices_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spotify_connectstate_devices_connect_devices_proto_rawDesc), len(file_spotify_connectstate_devices_connect_devices_proto_rawDesc)))
	})
	return file_spotify_connectstate_devices_connect_devices_proto_rawDescData
}

var file_spotify_connectstate_devices_connect_devices_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spotify_connectstate_devices_connect_devices_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_spotify_connectstate_devices_connect_devices_proto_goTypes = []any{
	(DeviceType)(0),                 // 0: spotify.connectstate.devices.DeviceType
	(GroupData_GroupType)(0),        // 1: spotify.connectstate.devices.GroupData.GroupType
	(GroupDevice_GroupingStatus)(0), // 2: spotify.connectstate.devices.GroupDevice.GroupingStatus
	(*DeviceAlias)(nil),             // 3: spotify.connectstate.devices.DeviceAlias
	(*GroupData)(nil),               // 4: spotify.connectstate.devices.GroupData
	(*GroupCapabilities)(nil),       // 5: spotify.connectstate.devices.GroupCapabilities
	(*GroupDevice)(nil),             // 6: spotify.connectstate.devices.GroupDevice
	(*GroupDeviceCapabilities)(nil), // 7: spotify.connectstate.devices.GroupDeviceCapabilities
	(*GroupDeviceVolume)(nil),       // 8: spotify.connectstate.devices.GroupDeviceVolume
}
var file_spotify_connectstate_devices_connect_devices_proto_depIdxs = []int32{
	4, // 0: spotify.connectstate.devices.DeviceAlias.group_data:type_name -> spotify.connectstate.devices.GroupData
	6, // 1: spotify.connectstate.devices.GroupData.devices:type_name -> spotify.connectstate.devices.GroupDevice
	5, // 2: spotify.connectstate.devices.GroupData.capabilities:type_name -> spotify.connectstate.devices.GroupCapabilities
	1, // 3: spotify.connectstate.devices.GroupData.type:type_name -> spotify.connectstate.devices.GroupData.GroupType
	0, // 4: spotify.connectstate.devices.GroupDevice.device_type:type_name -> spotify.connectstate.devices.DeviceType
	7, // 5: spotify.connectstate.devices.GroupDevice.capabilities:type_name -> spotify.connectstate.devices.GroupDeviceCapabilities
	2, // 6: spotify.connectstate.devices.GroupDevice.grouping_status:type_name -> spotify.connectstate.devices.GroupDevice.GroupingStatus
	8, // 7: spotify.connectstate.devices.GroupDevice.volume:type_name -> spotify.connectstate.devices.GroupDeviceVolume
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_spotify_connectstate_devices_connect_devices_proto_init() }
func file_spotify_connectstate_devices_connect_devices_proto_init() {
	if File_spotify_connectstate_devices_connect_devices_proto != nil {
		return
	}
	file_spotify_connectstate_devices_connect_devices_proto_msgTypes[0].OneofWrappers = []any{}
	file_spotify_connectstate_devices_connect_devices_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spotify_connectstate_devices_connect_devices_proto_rawDesc), len(file_spotify_connectstate_devices_connect_devices_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spotify_connectstate_devices_connect_devices_proto_goTypes,
		DependencyIndexes: file_spotify_connectstate_devices_connect_devices_proto_depIdxs,
		EnumInfos:         file_spotify_connectstate_devices_connect_devices_proto_enumTypes,
		MessageInfos:      file_spotify_connectstate_devices_connect_devices_proto_msgTypes,
	}.Build()
	File_spotify_connectstate_devices_connect_devices_proto = out.File
	file_spotify_connectstate_devices_connect_devices_proto_goTypes = nil
	file_spotify_connectstate_devices_connect_devices_proto_depIdxs = nil
}
